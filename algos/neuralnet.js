var brain = require("brain"),
    fs = require("fs"),
    path = require("path");

var dir = "train";

var netJSON = trainNetwork();
console.log("network:", JSON.stringify(netJSON));

const NET = {"layers":[{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"16":{},"20":{},"24":{},"tabs":{}},{"0":{"bias":-1.1954006165730218,"weights":{"1":-0.030547388283127776,"2":2.2950413022067693,"3":1.331404978267154,"4":-0.05104367736260556,"5":-0.1376099615978148,"6":0.34998673601573194,"8":-0.21739880125035932,"9":-0.07977907372984099,"10":-0.2978143930197387,"11":-0.12490856108724206,"12":-0.03851017231956787,"13":-0.021854236398704454,"14":0.10257706887093934,"16":-0.2947498857354625,"20":-0.028873265981665765,"24":-0.0015872676439792905,"tabs":-1.0687166441130194}},"1":{"bias":-0.14033409049844073,"weights":{"1":0.08865554194889559,"2":-1.1366439614357733,"3":1.3769581857613187,"4":-0.10499398374361918,"5":-0.08179926126301922,"6":-0.3069221173419906,"8":-0.44047650910470365,"9":-0.13947649299878168,"10":0.12872260427598115,"11":0.18482095518750097,"12":-0.2126146437566087,"13":0.04588230346862741,"14":0.12734013563785446,"16":-0.1348750778052907,"20":-0.14691451683304269,"24":0.05058986935119764,"tabs":0.9476634904710843}},"2":{"bias":0.4348128226998529,"weights":{"1":0.06321929317268214,"2":-1.8362856229348283,"3":1.4441090713398217,"4":-0.2892981680877959,"5":0.008720045885250775,"6":-0.11446713207102378,"8":-0.32725639243133753,"9":0.0737357388079095,"10":-0.1615374213710401,"11":0.12273867411443792,"12":-0.2671028267052411,"13":-0.1094757510615611,"14":0.1585016951639454,"16":-0.2506889728006863,"20":0.030468468723264128,"24":0.1450201765969695,"tabs":1.1043051777527775}},"3":{"bias":1.2640876383919546,"weights":{"1":-0.12080504628213416,"2":-2.1484560770024568,"3":-1.8123707881438371,"4":0.009835913531997696,"5":-0.023089151570004865,"6":-0.20643309238417704,"8":0.4366362317539753,"9":0.17135078796822537,"10":0.1846064544938956,"11":0.0318097953987568,"12":0.18306518445263356,"13":0.17835278680553435,"14":0.140592075969711,"16":0.10605911419836214,"20":0.09056624802946053,"24":-0.10052195987149959,"tabs":0.964484633213753}},"4":{"bias":-0.4858359632855181,"weights":{"1":-0.1209895769328059,"2":1.7457764582748652,"3":0.177901140790168,"4":0.49931938907859647,"5":-0.11022282720775643,"6":0.28588441169049383,"8":0.007164665788162044,"9":0.12054281327171659,"10":-0.17079282320626255,"11":-0.028462265721394577,"12":0.35201752124298785,"13":-0.05214867687308493,"14":0.06239103355443618,"16":-0.034514517898692545,"20":-0.10416507412630392,"24":0.053284308304666114,"tabs":-1.0246834413163006}}},{"0":{"bias":1.623917991487488,"weights":{"0":1.3256341585973712,"1":-2.7938775965794926,"2":-3.7083371986017717,"3":0.3776319237657503,"4":1.5152979020743211}},"1":{"bias":1.333083395569495,"weights":{"0":1.2333935094908446,"1":-2.3757735168781333,"2":-2.702346499395777,"3":0.4702117138702407,"4":1.3911837133072247}},"2":{"bias":-0.11913688831260476,"weights":{"0":-0.07370955328569295,"1":-0.6113459537196653,"2":-0.7051964089877573,"3":0.3798326221969467,"4":0.32604904457146905}},"3":{"bias":0.08830294623074157,"weights":{"0":-3.748147309799374,"1":0.11930440718361593,"2":1.3058024089890705,"3":3.93325435369904,"4":-1.517912856177625}},"4":{"bias":1.141769011403199,"weights":{"0":1.036064803079483,"1":-2.3185521481603053,"2":-2.960208573815944,"3":0.5450244945952476,"4":1.673649178070799}}},{"0":{"bias":-2.5698237657042253,"weights":{"0":4.4770609288159395,"1":2.816525117450001,"2":-0.08090555922754676,"3":-4.988612376707758,"4":3.001235667634003}},"1":{"bias":0.42917525519345967,"weights":{"0":-6.107954860862698,"1":-4.56127524566773,"2":-0.8178096887238345,"3":2.673414891901291,"4":-4.747965252431208}},"2":{"bias":-1.6396856215412658,"weights":{"0":2.5548991966787864,"1":1.217034679168119,"2":-0.566994132253621,"3":-7.236444081235286,"4":1.2911657392953346}},"3":{"bias":-0.7721807154703609,"weights":{"0":1.570688339023548,"1":1.0153787984428566,"2":0.0795651121793843,"3":-1.9762396540352887,"4":1.1591618487790483}},"4":{"bias":1.1930688369640476,"weights":{"0":0.058530165128235584,"1":0.26826490193387653,"2":-0.0890843256042825,"3":-3.564188579816262,"4":-0.03509887981935323}}},{"0":{"bias":3.692265386168307,"weights":{"0":-5.619066908868238,"1":-7.673153947948918,"2":-4.607007377783747,"3":-2.040212200111297,"4":-2.3608506549810575}},"2":{"bias":-4.500546809274989,"weights":{"0":0.4521653218606837,"1":-4.39521322788211,"2":7.785144170900799,"3":0.05713611739657488,"4":0.8410019909834802}},"3":{"bias":-1.789990680336634,"weights":{"0":-1.5210188887721785,"1":-1.5445766257891813,"2":-1.0455177207815285,"3":-0.5716252944486829,"4":2.4688108866362164}},"4":{"bias":-2.888708546126588,"weights":{"0":6.97336534161179,"1":-5.386392103762504,"2":-6.7431299482661835,"3":-0.02538636283356636,"4":-2.2510243874972526}},"tabs":{"bias":-2.2921375067374257,"weights":{"0":-4.949825398937052,"1":6.87296641736846,"2":-4.173821441928732,"3":-2.754355948040118,"4":-1.8459937911250976}}}],"outputLookup":true,"inputLookup":true}
module.exports = function(lines) {
  var spaces = getWidthCounts(lines);

  var net = new brain.NeuralNetwork().fromJSON(NET);
  var result = net.run(spaces);

  console.log("result:", result);

  var maxProb = 0, bestIndent = null;
  for (var width in result) {
    var prob = result[width];
    if (prob > maxProb) {
      bestIndent = width;
      maxProb = prob;
    }
  }
  console.log("best:", bestIndent);
  return bestIndent;
}


function trainNetwork() {
  var data = [];
  var files = fs.readdirSync(dir);

  for (var j in files) {
    var file = path.join(dir, files[j]);
    var indent = getIndent(file);
    var contents = fs.readFileSync(file, { encoding: "utf-8"});
    var lines = contents.split("\n");

    var counts = getWidthCounts(lines);
    var output = {};
    output[indent] = 1;
    console.log("input", counts);
    console.log("output", output);
    data.push({input: counts, output: output});
  }

  console.log("training network");

  var net = new brain.NeuralNetwork({hiddenLayers: [5,5,5]});
  var stats = net.train(data);

  console.log("trained", stats);

  return net.toJSON();
}

function getWidthCounts(lines) {
  var widths = {};  // # spaces -> # lines with that many spaces

  // count up number of lines using each type of indentation
  lines.forEach(function (text) {
    if (text[0] == "\t") {
      widths["tabs"] = (widths["tabs"] || 0) + 1;
      return;
    }
    var i = 0;
    while (text[i] === " ") {
      i++;
    }
    if (i == 0 || i == text.length) {
      return;
    }
    widths[i] = (widths[i] || 0) + 1;
  });
  // TODO divide by total to normalize btw 0 and 1
  return widths;
}

function getIndent(filename) {
  if (/-tabs\./.test(filename)) {
    return "tabs";
  }

  var matches = filename.match(/-(\d)\./);
  if (!matches) {
    return 0;
  }
  var spaces = parseInt(matches[1] || "0");
  return spaces || 0;
}
