var brain = require("brain"),
    fs = require("fs"),
    path = require("path");

var dir = "train";

var netJSON = trainNetwork();
console.log("network:", JSON.stringify(netJSON));

const NET = {"layers":[{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"16":{},"20":{},"24":{},"tabs":{}},{"0":{"bias":0.2137961775745228,"weights":{"1":0.10472347418899348,"2":-4.867463026768405,"3":0.028387514872027602,"4":0.5362864614580348,"5":0.690503955487879,"6":-2.196015175446663,"8":0.9425202468664209,"9":-0.018579982715915006,"10":0.8985488093003412,"11":0.4805020459362963,"12":1.38176852601417,"13":0.13593301538388622,"14":-0.1951820247143277,"16":0.5389656018044583,"20":0.5206896887363952,"24":0.21524124042670587,"tabs":1.8530074742440008}},"1":{"bias":-1.355627640412525,"weights":{"1":0.6047558711346966,"2":4.2015736619558375,"3":3.1352508807666357,"4":1.0642491744220854,"5":1.696320163816036,"6":2.0606633838868302,"8":-0.08854491068985293,"9":-0.00889194145129924,"10":-0.23890699950575642,"11":0.7545530586272838,"12":0.7901234087012793,"13":0.03332615901627747,"14":-0.08584019360389702,"16":0.6578289242939058,"20":0.4132579890596287,"24":0.17022303808278189,"tabs":4.705533835960793}},"2":{"bias":-0.022904611618181945,"weights":{"1":-0.0749669331514065,"2":1.8183366032250563,"3":-2.1025285975096852,"4":1.0492562863574957,"5":-1.6564048861168685,"6":1.2932966712776774,"8":2.660249803682024,"9":0.06880798712560468,"10":0.35720753338148264,"11":-0.8468464278962915,"12":1.088515955210687,"13":-0.27092316169784264,"14":-0.05495548205392795,"16":1.3505477560805874,"20":0.9409262895712246,"24":0.29674506608671103,"tabs":-4.441965030352662}},"3":{"bias":0.35063500025704986,"weights":{"1":-0.07943663430678374,"2":6.076951458327572,"3":-1.2132470154144426,"4":-2.206987117392988,"5":-1.364352604852777,"6":2.141673661016971,"8":-3.2002678000367846,"9":0.13958979472044353,"10":-2.0279662474167783,"11":-0.7838878211406471,"12":-2.9565307678879664,"13":-0.42432864101145734,"14":0.16632607586048756,"16":-2.223763720555868,"20":-1.5324986249315937,"24":-0.07747736083254049,"tabs":-2.6482225889078266}},"4":{"bias":-1.0360286891691652,"weights":{"1":0.33174304973382457,"2":1.1112600568599154,"3":-0.2329180436425129,"4":0.3809877314052686,"5":0.9349786181028515,"6":0.012911814793679055,"8":0.7587564693306205,"9":0.20608048265104856,"10":0.3987685948280834,"11":0.254820044808445,"12":1.1563186512661172,"13":0.10192329138646519,"14":-0.016639712608586696,"16":0.7887711351126361,"20":0.4184419640241853,"24":0.24872169599707883,"tabs":3.148296932050801}},"5":{"bias":-1.0324149407318837,"weights":{"1":0.07836298853912461,"2":6.569323128625307,"3":2.1429560277396966,"4":0.6718981225416795,"5":-0.13491988789103787,"6":3.6347864077576686,"8":-0.7591531042626347,"9":-0.042399796036550315,"10":-1.084152194050712,"11":-0.463238335195865,"12":-0.8102895352726157,"13":-0.1754243121538372,"14":-0.04167569620407927,"16":-0.46914479683451626,"20":-0.2895069394305674,"24":-0.2098311234188922,"tabs":-0.6405952420260975}},"6":{"bias":1.4444127323037725,"weights":{"1":-0.3483733760000391,"2":-2.1423100180091508,"3":1.3259836827395473,"4":-3.1660921388132754,"5":-0.1878280395018863,"6":-1.9088548407493653,"8":-3.728172469802264,"9":-0.3910408074783626,"10":-0.9610853815028969,"11":0.42391698904227487,"12":-2.7822290597299717,"13":0.12319261190781701,"14":-0.11677809979683265,"16":-2.84281596524847,"20":-1.8150158183521743,"24":-0.294813225962705,"tabs":1.3814206189882983}},"7":{"bias":-0.5984809863553262,"weights":{"1":0.16574963121145986,"2":2.6019942743101163,"3":-1.8355019740803067,"4":1.061814278676735,"5":-0.4389455718841666,"6":1.0439442573913842,"8":1.5624163053035975,"9":0.2621735278024312,"10":0.1167792835102197,"11":-0.2928281087553538,"12":0.9624918299325648,"13":-0.26823718419390186,"14":-0.12114333804801067,"16":1.0315151280405654,"20":0.6835685464930712,"24":0.13686413322929902,"tabs":-1.043694461559772}}},{"0":{"bias":0.38801431390549995,"weights":{"0":-0.5743413692996666,"1":-7.315671797517852,"2":0.19153100977995763,"3":3.8216835628260766,"4":-3.5316596056026657,"5":-2.860491031843497,"6":5.319067307112267,"7":-1.5551103253059346}},"2":{"bias":-3.3682137047427094,"weights":{"0":-5.991816222609197,"1":0.9632482847949017,"2":0.9026204909704489,"3":5.259844131938212,"4":-1.2721651506209923,"5":5.215055403236446,"6":-3.4164279297774143,"7":1.1534065467426535}},"3":{"bias":-0.8538071071607688,"weights":{"0":-0.3012806643543883,"1":0.1356001822933377,"2":-0.9791428650263857,"3":-0.6759918479652143,"4":-2.0889060117443723,"5":1.478722490870799,"6":0.4155990108609017,"7":-1.8054047201387338}},"4":{"bias":0.8236850568708951,"weights":{"0":2.4508069242108728,"1":-3.8555529205232104,"2":5.329438571608339,"3":-5.787746926671832,"4":-0.4181011757659328,"5":-3.6391223242562973,"6":-5.110683708523708,"7":2.002893507390907}},"tabs":{"bias":-0.20786507410723493,"weights":{"0":2.979453230808618,"1":1.1351976594630948,"2":-6.08574131398166,"3":-4.390688847853974,"4":1.013901292787124,"5":-3.9051795392230164,"6":2.184089404442945,"7":-3.026039093566432}}}],"outputLookup":true,"inputLookup":true};

module.exports = function(lines) {
  var spaces = getWidthCounts(lines);

  var net = new brain.NeuralNetwork().fromJSON(NET);
  var result = net.run(spaces);

  console.log("result:", result);

  var maxProb = 0, bestIndent = null;
  for (var width in result) {
    var prob = result[width];
    if (prob > maxProb) {
      bestIndent = width;
      maxProb = prob;
    }
  }
  if (bestIndent == 0) {
    return null;
  }
  console.log("best:", bestIndent);
  return bestIndent;
}


function trainNetwork() {
  var data = [];
  var files = fs.readdirSync(dir);

  for (var j in files) {
    var file = path.join(dir, files[j]);
    var indent = getIndent(file);
    var contents = fs.readFileSync(file, { encoding: "utf-8"});
    var lines = contents.split("\n");

    var counts = getWidthCounts(lines);
    var output = {};
    output[indent] = 1;
    console.log("input", counts);
    console.log("output", output);
    data.push({input: counts, output: output});
  }

  console.log("training network");

  var net = new brain.NeuralNetwork();
  var stats = net.train(data);

  console.log("trained", stats);

  return net.toJSON();
}

function getWidthCounts(lines) {
  var widths = {};  // # spaces -> # lines with that many spaces
  var total = 0;    // # of indented lines

  // count up number of lines using each type of indentation
  lines.forEach(function (text) {
    if (text[0] == "\t") {
      widths["tabs"] = (widths["tabs"] || 0) + 1;
      total++;
      return;
    }
    var i = 0;
    while (text[i] === " ") {
      i++;
    }
    if (i == 0 || i == text.length) {
      return;
    }
    widths[i] = (widths[i] || 0) + 1;
    total++;
  });

  for (var width in widths) {
    widths[width] = widths[width] / total;
  }
  // TODO divide by total to normalize btw 0 and 1
  return widths;
}

function getIndent(filename) {
  if (/-tabs\./.test(filename)) {
    return "tabs";
  }

  var matches = filename.match(/-(\d)\./);
  if (!matches) {
    return 0;
  }
  var spaces = parseInt(matches[1] || "0");
  return spaces || 0;
}
